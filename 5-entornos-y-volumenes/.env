# .env.example - Template de Variables de Entorno para Bloque 5
# 
# INSTRUCCIONES:
# 1. Copia este archivo: cp env-example .env
# 2. Personaliza los valores según tu entorno local
# 3. NUNCA hagas commit del archivo .env (debe estar en .gitignore)
# 4. Este archivo es continuación del stack del Bloque 4

# === CONFIGURACIÓN DE APLICACIÓN ===
NODE_ENV=development
APP_NAME=docker-capacitacion-bloque5
API_PORT=3000
DEBUG=true
LOG_LEVEL=debug

# === CONFIGURACIÓN NGINX ===
NGINX_PORT=80
NGINX_WORKER_PROCESSES=auto

# === BASE DE DATOS POSTGRESQL ===
# Mantener coherencia con Bloque 4
DB_HOST=database
DB_PORT=5432
DB_NAME=myapp
DB_USER=postgres
DB_PASSWORD=password
DATABASE_URL=postgresql://postgres:password@database:5432/myapp

# === SEGURIDAD (CAMBIAR EN PRODUCCIÓN) ===
SECRET_KEY=dev-secret-key-change-in-production-32chars
JWT_SECRET=dev-jwt-secret-for-development-only
SESSION_SECRET=dev-session-secret-change-in-prod

# === LOGS Y MONITOREO ===
LOG_FILE=/app/logs/app.log
ENABLE_LOGGING=true
LOG_FORMAT=json
ACCESS_LOG_ENABLED=true

# === CONFIGURACIÓN DE DESARROLLO ===
HOT_RELOAD=true
WATCH_FILES=true
DEV_MODE=true
ENABLE_DEBUG_ENDPOINTS=true

# === CONFIGURACIÓN DE TESTING ===
# Para .env.testing usar estos valores:
# NODE_ENV=test
# DEBUG=false
# LOG_LEVEL=warn
# DB_NAME=myapp_test
# API_PORT=3001
# NGINX_PORT=8081

# === CONFIGURACIÓN DE PRODUCCIÓN ===
# Para .env.production usar estos valores:
# NODE_ENV=production
# DEBUG=false
# LOG_LEVEL=error
# SECRET_KEY=super-secure-production-key-32-characters-minimum
# DATABASE_URL=postgresql://prod_user:secure_password@prod-cluster:5432/myapp_prod

# === CONFIGURACIÓN DE VOLÚMENES ===
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
LOG_RETENTION_DAYS=30

# === VARIABLES PARA STACK COMPLETO ===
# Estas variables son utilizadas por docker-compose.yml del Bloque 5
# que construye sobre el stack del Bloque 4 (nginx + api + database)

# Configuración de red
FRONTEND_NETWORK=frontend
BACKEND_NETWORK=backend

# Configuración de volúmenes
POSTGRES_DATA_VOLUME=postgres_data
APP_LOGS_VOLUME=app_logs
BACKUP_VOLUME=backup_storage

# === NOTAS IMPORTANTES ===
# - Estas variables extienden el stack del Bloque 4
# - El stack debe seguir funcionando sin interrupciones
# - Los servicios nginx, api y database mantienen compatibilidad
# - Se agregan nuevas capacidades: logs, backups, configuraciones por entorno 